<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <security:http auto-config="true" use-expressions="true">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/resources/**" access="permitAll()"/>
        <security:intercept-url pattern="/" access="permitAll()"/>

        <security:intercept-url pattern="/product/cart" access="hasAnyRole('ROLE_SELLER', 'ROLE_USER', 'ROLE_ADMIN')"/>


<!--        3/30일-->
        <security:intercept-url pattern="/product/register" access="hasRole('ROLE_SELLER')"/>
        <security:intercept-url pattern="/product/**" access="permitAll()"/>

        <security:intercept-url pattern="/member/login" access="permitAll()"/>
        <security:intercept-url pattern="/member/register" access="permitAll()"/>

        <security:intercept-url pattern="/image/**" access="permitAll()"/>
        <security:intercept-url pattern="/saveImage/**" access="permitAll()"/>
        <security:intercept-url pattern="/result" access="permitAll()"/>

        <security:intercept-url pattern="/member/admin" access="hasRole('ROLE_ADMIN')"/>
<!--        hasRole 안에 "ROLE_" prefix를 직접 넣어주면 spring security가 넣어줘서 판단 -->

<!--        마지막에 넣어주어야 됨-->
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>


        <security:intercept-url pattern="/member/logout" access="permitAll()"/>
        <security:logout logout-url="/member/logout" logout-success-url="/"/>


<!--        isAuthenticated() 로그인 된 사람만-->
<!--        login-processing-url="/member/auth"-->

        <security:form-login
                username-parameter="username"
                password-parameter="password"
                login-processing-url="/member/auth"
                default-target-url="/product/showAll/1"
                authentication-failure-handler-ref="userAuthFailHandler"
                authentication-success-handler-ref="userAuthSuccessHandler"
                login-page="/member/login"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="memberService" />
    </security:authentication-manager>

    <context:component-scan base-package="com.bit.spring.handler"/>
    <context:component-scan base-package="com.bit.spring.service"/>


</beans>